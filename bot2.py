import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
import requests
import os

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å—Ç–µ /github <username>, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ—Ñ–∏–ª—è.")

async def github_info(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if len(context.args) != 1:
        await update.message.reply_text('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º: /github username')
        return

    username = context.args[0]
    try:
        response = requests.get(f'https://api.github.com/users/{username}')
        
        if response.status_code == 200:
            user_data = response.json()
            
            message = f"""
–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_data['login']}
–ü—Ä–æ—Ñ–∏–ª—å: https://github.com/{user_data['login']}
–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏: {user_data['public_repos']} üìÅ
–ü–æ–¥–ø–∏—Å—á–∏–∫–∏: {user_data['followers']} ‚≠êÔ∏è
–ü–æ–¥–ø–∏—Å–∫–∏: {user_data['following']} ‚ú®
–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {user_data['created_at'].split('T')[0]} üóìÔ∏è
"""
            await update.message.reply_text(message)
        else:
            await update.message.reply_text(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    
    except Exception as e:
        logger.error(e)
        await update.message.reply_text("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...")

def main():
    application = ApplicationBuilder().token(TELEGRAM_BOT_TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("github", github_info))

    application.run_polling()

if __name__ == '__main__':
    main()
